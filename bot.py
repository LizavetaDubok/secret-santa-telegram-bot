import config
import telebot
from database import DataBase
from random import shuffle

db = DataBase('database.db')
bot = telebot.TeleBot(config.TOKEN)
fixed = False
is_started = False


def generate_buttons(bts_names, markup):
    for button in bts_names:
        markup.add(telebot.types.KeyboardButton(button))
    return markup


@bot.message_handler(commands=['start'])
def start(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup = generate_buttons(['–°—Ç–∞—Ç—å –°–∞–Ω—Ç–æ–π'], markup)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ–µ–µ—Ç, —è –±–æ—Ç –¥–ª—è –¢–∞–π–Ω–æ–≥–æ –°–∞–Ω—Ç—ã –°—Ç—É–¥–ª–∏–≥–∏!')
    bot.send_sticker(message.chat.id,
                     'CAACAgIAAxkBAAEGsV9jjcgcnL0TRHi24pXy7zrOLctBLgACzwADq1fEC6Wy_-K65z0pKwQ')  # —Ö–æ–Ω–∫–∞
    bot.send_message(message.chat.id, '–°–Ω–µ–≥ —É–∂–µ –≤—ã–ø–∞–ª, –≥–∏—Ä–ª—è–Ω–¥—ã —É–∂–µ –∑–∞—à—É—Ä—à–∞–ª–∏, –∞ –∑–Ω–∞—á–∏—Ç '
                                      '–ø–æ—Ä–∞ –∑–∞–¥—É–º–∞—Ç—å—Å—è –æ —Ä–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–æ–º —Ç—É—Ä–Ω–∏—Ä–µ, –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–π –º–∞—Ñ—Ç—É—Å–æ–≤–∫–µ –∏, '
                                      '–∫–æ–Ω–µ—á–Ω–æ, –ø–æ–¥–∞—Ä–∫–∞—Ö..\n\n'
                                      'üéÑ –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–¥–∞—Ä–∫–∞ ‚Äî 15-20—Ä\n'
                                      'üéÑ –û–∫–æ–Ω—á–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚Äî 6 –¥–µ–∫–∞–±—Ä—è 23:59\n'
                                      'üéÑ –ö–æ–≥–¥–∞ —Å–±–æ—Ä? ‚Äî –í—ã–±–µ—Ä–µ–º –¥–∞—Ç—É –∫ –ù–æ–≤–æ–º—É –≥–æ–¥—É\n'
                                      'üéÑ –°–º–æ–≥—É –ª–∏ —è —Ä–∞–∑–¥–æ–±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫—Ç–æ –º–æ–π –°–∞–Ω—Ç–∞? ‚Äî '
                                      '–ù–µ–Ω—å, –±–æ—Ç –ø–æ–¥–∫–æ–Ω—Ç—Ä–æ–ª–µ–Ω —Å–∞–º–æ–π –Ω–µ–ø–æ–¥–∫—É–ø–Ω–æ–π –≥-–∂–µ –õ–µ–Ω–∏ü¶•\n\n'
                                      '–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /join, —á—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∏–≥—Ä—É', reply_markup=markup)


@bot.message_handler(commands=['help'])
def help_(message):
    if message.chat.id in config.admin_chat_id:
        bot.send_message(message.chat.id, '/start\n'
                                          '/join\n'
                                          '/leave\n'
                                          '/wish\n'
                                          '/fix\n'
                                          '/unfix\n'
                                          '/get_participants\n'
                                          '/get_matches\n'
                                          '/match\n'
                                          '/dummy_match\n'
                                          '/play\n'
                                          '/kick\n'
                                          '/notification')
    else:
        bot.send_message(message.chat.id, '/start\n'
                                          '/join\n'
                                          '/leave\n'
                                          '/wish\n')


@bot.message_handler(commands=['join'])
def join(message):
    if db.check_participant(message.chat.id):
        bot.send_message(message.chat.id, '–•–∞-—Ö–∞ —Ö–∏—Ç—Ä—é—à–∫–∞, –¥–≤–∞ –ø–æ–¥–∞—Ä–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –¢—ã —É–∂–µ –∏–≥—Ä–∞–µ—à—å')
    elif fixed:
        bot.send_message(message.chat.id, '–ê –≤—Å—ë, –∞ –ø–æ–∑–¥–Ω–æ, –∞ –Ω–∞–¥–æ –±—ã–ª–æ —Ä–∞–Ω—å—à–µ')
        bot.send_sticker(message.chat.id,
                         'CAACAgIAAxkBAAEGsWBjjcgckIH8wWWjWFf9ItfD2A9KywACWhcAAhVy0UomNQvcnMWq1isE')  # –ª–æ—Ö

    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –Ω–∏–∫ –∏–ª–∏ –∏–º—è, –µ—Å–ª–∏ –Ω–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ—Ç')
        bot.register_next_step_handler(message, after_nick)


def after_nick(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup = generate_buttons(['–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –°–∞–Ω—Ç–µ', '–ü–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É'], markup)

    db.add_participant(message.chat.id, message.text)

    bot.send_message(message.chat.id, f'–£—Ä–∞–∞,{db.get_nickname(message.chat.id)}, '
                                      f'—Ç—ã —É—á–∞—Å—Ç–Ω–∏—Ü–∞ –¢–∞–π–Ω–æ–≥–æ –°–∞–Ω—Ç—ã –°—Ç—É–¥–ª—É–∂–∏!\n\n'
                                      f'–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —è —Å–æ–æ–±—â—É —Ç–µ–±–µ, –∫—Ç–æ —Ç–≤–æ—è –ø–æ–¥–æ–ø–µ—á–Ω–∞—è, '
                                      f'–∏ –ø–æ–¥–µ–ª—é—Å—å –µ—ë –≤–∏—à–ª–∏—Å—Ç–æ–º \n'
                                      f'‚ú®\n'
                                      f'-–ë–æ—Ç —Å–¥–µ–ª–∞–Ω —Ñ–µ–º–∏–Ω–∏—Å—Ç–∫–∞–º–∏..\n'
                                      f'-–°–µ–∫—Å–∏—Å—Ç–∫–∞–º–∏, –¢–æ—Ä–∏)\n'
                                      f'‚ú®\n'
                                      f'A –ø–æ–∫–∞ —Ç—ã –º–æ–∂–µ—à—å —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π, '
                                      f'–∏—Å–ø–æ–ª—å–∑—É—è –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /wish',
                     reply_markup=markup)

    bot.send_message(message.chat.id, '–ú–∞–ª–µ–Ω—å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞, —á—Ç–æ–±—ã –≤—Å–µ –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã: \n'
                                      'üéÅ –ü–∏—à–∏ –≤—Å–µ —Å–≤–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ø–∏—Å–∫–∞ '
                                      '(–µ—Å–ª–∏ –≤—ã –Ω–∞–ø–∏—à–∏—Ç–µ –¥–≤–∞ –∏ –±–æ–ª–µ–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –±–æ—Ç –∑–∞–ø–∏—à–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ)\n'
                                      'üéÅ –ü–∏—à–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ, –µ—Å–ª–∏ —É–∫–∞–∑—ã–≤–∞–µ—à—å –Ω–∞—Å—Ç–æ–ª–∫–∏ –∏–ª–∏ –∫–Ω–∏–≥–∏\n'
                                      'üéÅ –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è, '
                                      '–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /wish –ø–æ–≤—Ç–æ—Ä–Ω–æ, '
                                      '—Ç–æ–≥–¥–∞ —Å—Ç–∞—Ä–æ–µ –ø–∏—Å—å–º–æ –∑–∞—Ç–µ—Ä—è–µ—Ç—Å—è –≥–¥–µ-—Ç–æ –Ω–∞ –ø–æ—á—Ç–µ',
                     reply_markup=markup)
    bot.send_sticker(message.chat.id,
                     'CAACAgUAAxkBAAEGsWFjjcgc1yrMse0CjPjnbWFgmUoLJQACSQcAAszG4gKKHaJFtDWCOSsE')  # lov


@bot.message_handler(commands=['leave'])
def leave(message):
    if not db.check_participant(message.chat.id):
        bot.send_message(message.chat.id, '–û–ø—Ä–µ–¥–µ–ª–∏—Å—å....')
    elif fixed:
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup = generate_buttons(['–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –°–∞–Ω—Ç–µ'], markup)
        bot.send_message(message.chat.id, 'Game has been started, you can\'t escape it muahaha', reply_markup=markup)
    else:
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup = generate_buttons(['–°—Ç–∞—Ç—å –°–∞–Ω—Ç–æ–π'], markup)

        db.delete_participant(message.chat.id)
        bot.send_message(message.chat.id, '–¢—ã –∫—É–¥–∞, –û–¥–∏—Å—Å–µ–π, –æ—Ç –∂–µ–Ω—ã, –æ—Ç –¥–µ—Ç–µ–π',
                         reply_markup=markup)


@bot.message_handler(commands=['notification'])
def notification(message):
    if message.chat.id in config.admin_chat_id:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ')
        bot.register_next_step_handler(message, send_to_all)
    else:
        bot.send_message(message.chat.id, 'Sorry, you don\'t have rights to do this')


def send_to_all(message):
    for chat_id in db.get_participants():
        bot.send_message(chat_id, message.text)
    bot.send_message(message.chat.id, 'Done')


def send_wishes_to_santa(chat_id):
    wishes = db.get_participant_wishes(chat_id)
    if wishes:
        bot.send_message(db.get_participant_santa(chat_id),
                         '–•–µ—Ö–µ, –∞ –≤–æ—Ç –∏ —Å–ø–∏—Å–æ–∫ –ø–æ–∂–µ–ª–∞–Ω–∏–π —Ç–≤–æ–µ–π –ø–æ–¥–æ–ø–µ—á–Ω–æ–π:\n' + wishes)
    else:
        bot.send_message(db.get_participant_santa(chat_id),
                         '–ë—É—É–ø, —Ç–≤–æ—è –ø–æ–¥–æ–ø–µ—á–Ω–∞—è –µ—â—ë –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∞ –ø–∏—Å—å–º–æ –°–∞–Ω—Ç–µ, '
                         '—è –ø—Ä–∏—à–ª—é –µ–≥–æ —Ç–µ–±–µ, –∫–æ–≥–¥–∞ –æ–Ω–∞ –µ–≥–æ –Ω–∞–ø–∏—à–µ—Ç')


@bot.message_handler(commands=['wish'])
def wish(message):
    if db.check_participant(message.chat.id):
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –ø–∏—Å—å–º–æ —Å–≤–æ–µ–º—É –°–∞–Ω—Ç–µ!')
        bot.register_next_step_handler(message, set_wishes)
    else:
        bot.send_message(message.chat.id, '–¢—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –∏–≥—Ä–µ –∏ –Ω–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /wish.'
                                          '–°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏ –≤ –∏–≥—Ä—É')


def set_wishes(message):
    db.set_participant_wishes(message.chat.id, message.text)
    if is_started:
        send_wishes_to_santa(message.chat.id)
    bot.send_message(message.chat.id, '–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –°–∞–Ω—Ç–µ')


@bot.message_handler(commands=['fix'])
def fix(message):
    if message.chat.id in config.admin_chat_id:
        global fixed
        fixed = True
        bot.send_message(message.chat.id, 'Fixed')
    else:
        bot.send_message(message.chat.id, 'Sorry, you don\'t have rights to do this')


@bot.message_handler(commands=['kick'])
def kick(message):
    if message.chat.id in config.admin_chat_id:
        bot.register_next_step_handler(message, delete)
    else:
        bot.send_message(message.chat.id, 'Sorry, you don\'t have rights to do this')


def delete(message):
    part = db.get_participants()
    if message.text.isdigit() and int(message.text) < len(part):
        db.delete_participant(part[int(message.text)])


@bot.message_handler(commands=['unfix'])
def unfix(message):
    if not is_started:
        bot.send_message(message.chat.id, 'Game is started')
    elif message.chat.id in config.admin_chat_id:
        global fixed
        fixed = False
        bot.send_message(message.chat.id, 'Unfixed')
    else:
        bot.send_message(message.chat.id, 'Sorry, you don\'t have rights to do this')


@bot.message_handler(commands=['get_matches'])
def get_matches(message):
    if message.chat.id in config.admin_chat_id:
        matches = db.get_matches()
        str_ = 'Person \t\t\t Santa\n\n'
        for pair in matches:
            str_ += f'{bot.get_chat(pair[0]).first_name} \t\t\t {bot.get_chat(pair[1]).first_name}\n'
        bot.send_message(message.chat.id, str_)
    else:
        bot.send_message(message.chat.id, 'Sorry, you don\'t have rights to do this')


@bot.message_handler(commands=['get_participants'])
def get_participants(message):
    if message.chat.id in config.admin_chat_id:
        participants = db.get_participants()
        str_ = f'number of participants: {len(participants)}\n\n'
        i_ = 0
        for chat_id in participants:
            str_ += f'{i_} {bot.get_chat(chat_id).first_name} @{bot.get_chat(chat_id).username}\n'
            i_ += 1
        bot.send_message(message.chat.id, str_)
    else:
        bot.send_message(message.chat.id, 'Sorry, you don\'t have rights to do this')


@bot.message_handler(commands=['match'])
def match(message):
    if is_started:
        bot.send_message(message.chat.id, 'Game is started')
    elif message.chat.id in config.admin_chat_id:
        if fixed:
            santas_indices = list(db.get_participants_id())
            shuffle(santas_indices)
            for i in range(len(santas_indices) - 1):
                db.set_santa(santas_indices[i], db.get_chat_id_by_id(santas_indices[i + 1]))
            db.set_santa(santas_indices[-1], db.get_chat_id_by_id(santas_indices[0]))
        else:
            bot.send_message(message.chat.id, 'Fix first')
    else:
        bot.send_message(message.chat.id, 'Sorry, you don\'t have rights to do this')


@bot.message_handler(commands=['dummy_match'])
def dummy_match(message):
    if is_started:
        bot.send_message(message.chat.id, 'Game is started')
    elif message.chat.id in config.admin_chat_id:
        if fixed:
            db.make_dummy_matches()
        else:
            bot.send_message(message.chat.id, 'Fix participants first')
    else:
        bot.send_message(message.chat.id, 'Sorry, you don\'t have rights to do this')


@bot.message_handler(commands=['play'])
def play(message):
    if message.chat.id in config.admin_chat_id:
        global is_started
        is_started = True
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup = generate_buttons(['–ü–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É', '–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –°–∞–Ω—Ç–µ'], markup)
        for chat_id in db.get_participants():
            ward_id = db.get_participant_ward(chat_id)
            ward_chat = bot.get_chat(ward_id)
            bot.send_message(chat_id,
                             f'–Ø –æ–±—ä—è–≤–ª—è—é –¢–∞–π–Ω–æ–≥–æ –°–∞–Ω—Ç—É –æ—Ç–∫—Ä—ã—Ç—ã–º, '
                             f'–ø–æ—Ö–ª–æ–ø–∞–π—Ç–µ –≤–∞—à–µ–π –ø–æ–¥–æ–ø–µ—á–Ω–æ–π - {db.get_nickname(ward_id)}'
                             f'(@{ward_chat.username})',
                             reply_markup=markup)

            bot.send_sticker(chat_id,
                             'CAACAgQAAxkBAAEGsWJjjcgcfF1u1yfIgbPUjlrMbD-yFwACowkAAhsKCFAGbfpeakI6rCsE')  # –±—É–ø
        for chat_id in db.get_participants():
            send_wishes_to_santa(chat_id)
        bot.send_message(message.chat.id, 'Game has been started')
    else:
        bot.send_message(message.chat.id, 'Sorry, you don\'t have rights to do this')


@bot.message_handler(content_types=['text'], chat_types=['private'])
def bot_message(message):
    if message.text == '–°—Ç–∞—Ç—å –°–∞–Ω—Ç–æ–π':
        join(message)

    if message.text == '–ü–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É':
        leave(message)

    if message.text == '–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –°–∞–Ω—Ç–µ':
        wish(message)


bot.polling(none_stop=True)
